{"relevantArticles":[{"articleTitle":"PHP 异步 HTTP 与 NGINX 499","articleAbstractText":"PHP 异步 HTTP 在 PHP 代码中提交异步 HTTP 请求比较常用的方式是通过 fsockopen/fwrite/fclose 来实现，请参考如下代码。 function post($host, $path, $port, $data) { $post = http_build_query($data); $len = strlen($post); $fp = fsockopen($host, $port, $errno, $errstr, 30); if (!$fp) { echo \"$errstr ($errno)\\n\"; return; } $out = \"POST $path HTTP/1.1\\r\\n\"; $out .= \"Host: $host\\r\\n\"; $out .= \"Content-type: application/x-www-form-urlencoded\\r\\n\"; $out .= \"Connection: Close\\r\\n\"; $out .= \"Content-Length: $len\\r\\n\"; $out .= \"\\r\\n\"; $out .= $p....","articleStatus":0,"articlePermalink":"/articles/2015/10/09/1444367397136.html","articleImg1URL":"https://img.hacpai.com/bing/20180807.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"最近的被攻击记录","articleAbstractText":"最近几天黑客派一直在被 CC 攻击，目前是通过 IP 限制暂时解决。 从攻击客户端的 User-Agent 来看，对方的攻击手段大致是通过公有站点检查服务+肉鸡进行 CC。不过 UA 不一定准确，可能是伪造的，仅提供作为参考。 User-Agent IP 个数 Mozilla/4.0 (compatible;HostTracker/2.0;+http://www.host-tracker.com/) 90 Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; cdnunion_monitor;) 130 Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3183.0 Safari/537.36 400 Mozilla/4.0 900 下面的附件是截至到今早的攻击请求日志，已经进行了 IP 去重。攻击地区主要是中国和美国，大家可以搜索一下自己的 IP 是否出现在日志中，以便做出相应的....","articleStatus":0,"articlePermalink":"/articles/2019/02/18/1550460506963.html","articleImg1URL":"https://img.hacpai.com/bing/20180912.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"呼叫中心架构设计","articleAbstractText":"从呼叫模式上看，目前业界大多数采用的是\u201c回拨\u201d模式，即由呼叫中心发起两路呼叫，然后将两路进行连通。","articleStatus":0,"articlePermalink":"/articles/2016/07/24/1469349167953.html","articleImg1URL":"https://img.hacpai.com/bing/20180412.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Windows 通过命令行安装根证书","articleAbstractText":"背景 有的时候我们需要在用户机器上将自制的 CA 证书安装到\u201c受信任的根证书颁发机构\u201d下，这样就能使用该 CA 颁发自签名的证书了，以便后续完成一些安全相关的操作。 工具 在命令行安装证书需要用到证书管理器 certmgr.exe，这个二进制可执行文件在 Win10 中 大概 这个路径下，C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86\\certmgr.exe，建议把这个二进制打在程序的发布包中，或者让程序从网络上拉取到本地。 不带参直接运行的话会弹出一个简单的图形界面： 另外，还有个证书管理器 certmgr.msc，看上去功能更多一些，不过这个是纯图形界面的： certmgr.exe 可以通过该工具实现证书的管理操作： D:&amp;gt;certmgr.exe /? Usage: CertMgr [options][-s [-r &lt;location&gt;][SourceStoreName] [-s [-r &lt;location&gt;][DestinationStoreName] Options: -add Add cer....","articleStatus":0,"articlePermalink":"/articles/2018/05/03/1525333052172.html","articleImg1URL":"https://img.hacpai.com/bing/20180413.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"敏感数据处理","articleAbstractText":"背景 大多数应用或多或少都会涉及到敏感数据处理，比如用户的手机号、身份证号，甚至银行卡账号。作为应用的开发者，如何 安全地 维护这些敏感数据呢？ 这里讨论的安全不是指服务器如何保护，而是在数据库层面做敏感数据的分离： * 业务库中不保存敏感数据，只保存混淆过的数据，比如电话字段保存的是 133****9961，在数据层面就进行脱敏 * 敏感数据统一保存在另一个库中，有应用调用一个服务来建立原值和混淆值的映射关系 * 业务库中因为保存的是脱敏过的数据，通过只读复制镜像可以很方便地提供给其他服务使用，比如 OLAP * 除了技术开发上方便，运维上也方便了很多，降低了敏感数据被暴露到外部的可能性 ### 技术设计 提供服务接口给应用存取敏感数据，本质上是一个 KV 存取服务。  一些细节： * 表 protyle 的 domain 字段用于标识该记录的作用域，在一个作用域上相同的值要保证唯一 * 表 protyle 的 ha....","articleStatus":0,"articlePermalink":"/articles/2016/05/11/1462956775250.html","articleImg1URL":"https://img.hacpai.com/bing/20180617.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"你保存用户密码的姿势正确吗？","articleAbstractText":"这几年陆陆续续有很多大站被脱裤，最终导致了很多用户的密码明文泄露。本文不探讨脱裤技术，主要研究的是如何正确（尽量安全）地保存用户密码。","articleStatus":0,"articlePermalink":"/secure-salted-password-hashing","articleImg1URL":"https://img.hacpai.com/bing/20180313.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}