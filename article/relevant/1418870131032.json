{"relevantArticles":[{"articleTitle":"云平台之 SaaS 随想","articleAbstractText":"\u201c平台\u201d本来就比较泛，再加上\u201cSaaS\u201d的话就更飘渺了。本文内容比较散，主要是描述 SaaS 相关概念以及实现 SaaS 所需的关注点。","articleStatus":0,"articlePermalink":"/saas-essay","articleImg1URL":"https://img.hacpai.com/bing/20190126.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"如何限制 docker run 容器执行时长？","articleAbstractText":"需求背景 有的时候我们需要跑一些不一定安全（不受信任）的程序时，可以通过 docker 实现资源隔离，其执行时长也需要控制，如果执行时间太长就终止运行。 Docker 本身是否支持超时控制 从 2013 年开始每隔一段时间都有人呼吁 docker 官方来实现这个特性，但官方并不打算实现。 具体讨论细节请看 https://github.com/moby/moby/issues/1905 。 错误的方案 以上讨论中以及其他地方陆续有人提出\u201c外围\u201d解决方案，其中有两种常见的错误方案值得我们注意。 kill docker run timeout 3 docker run ... untrusted_program docker run 本身是一个 docker client 派生的进程，使用 kill docker run 进程来终止容器进程运行（比如通过 Linux 命令 timeout 或者类似发送 kill 到 docker run 进程）的方案都可能会有问题，导致容器进程无法终止。主要原因是： docker run 这个进程不一定能及时响应信号，即使响应了信号，也不一定能传到容器......","articleStatus":0,"articlePermalink":"/articles/2019/05/19/1558229770509.html","articleImg1URL":"https://img.hacpai.com/bing/20190107.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"系统健康状态管理设计思路","articleAbstractText":"系统健康状态管理设计思路。","articleStatus":0,"articlePermalink":"/articles/2014/05/06/1399365922113.html","articleImg1URL":"https://img.hacpai.com/bing/20180331.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"你保存用户密码的姿势正确吗？","articleAbstractText":"这几年陆陆续续有很多大站被脱裤，最终导致了很多用户的密码明文泄露。本文不探讨脱裤技术，主要研究的是如何正确（尽量安全）地保存用户密码。","articleStatus":0,"articlePermalink":"/secure-salted-password-hashing","articleImg1URL":"https://img.hacpai.com/bing/20180313.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"MySQL 自动备份 Shell 脚本","articleAbstractText":"可以选择设置需要备份的库，自动备份压缩，自动删除 7 天前的备份，需要使用 crontab 定时执行。","articleStatus":0,"articlePermalink":"/backup-mysql-shell","articleImg1URL":"https://img.hacpai.com/bing/20171121.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"模板引擎实现（一）词法分析","articleAbstractText":"如果你想实现模版引擎、编译器前端、文本解析器（比如 Markdown ）或想要了解它们的实现原理，请一定不要错过本系列的文章 :grin: 模板引擎实现（一）词法分析 另外，* 本系列的文章面向的是撸起袖子就开干的朋友，所以不会介绍基础理论，比如 DFA/NFA，算法复杂度等（确切的说是没法介绍理论，因为作者能力有限 :joy:）* 在使用到的术语/定义方面作者是认真查过资料并再三斟酌的，不会出现胡编乱造，请放心理解和使用 :white_check_mark:* 本系列文章的对应项目是 freemarker.go（FreeMarker 的 golang 实现），欢迎大家关注点赞 :star2: 本文介绍了词法分析的基本概念，主要参考 golang 的 text/template/parse 包源码进行解析。 词法分析 将面向源码的字符流转成 token 流的过程是词法分析。用\u201c流\u201d来描述主要说明了处理过程是有序和连续的。比如读取源码文件时是一个字符一个字符读取的，生成的 token 也是一个接一个的。 当我们在源码中看到 scanner、lex/le....","articleStatus":0,"articlePermalink":"/articles/2017/05/31/1496233258522.html","articleImg1URL":"https://img.hacpai.com/bing/20190214.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Go 边看边练 -《Go 学习笔记》系列（十四）（已完结）","articleAbstractText":"上一篇： [1438938175118] ---- ### ToC * Go 边看边练 -《Go 学习笔记》系列（一）- 变量、常量 * Go 边看边练 -《Go 学习笔记》系列（二）- 类型、字符串 * Go 边看边练 -《Go 学习笔记》系列（三）- 指针 * Go 边看边练 -《Go 学习笔记》系列（四）- 控制流1 * Go 边看边练 -《Go 学习笔记》系列（五）- 控制流2 * [Go 边看边练 -《Go 学习笔记》系列（六）- 函数](http://symphony.b3....","articleStatus":0,"articlePermalink":"/articles/2015/08/10/1439194647152.html","articleImg1URL":"https://img.hacpai.com/bing/20181207.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}