{"relevantArticles":[{"articleTitle":"你保存用户密码的姿势正确吗？","articleAbstractText":"这几年陆陆续续有很多大站被脱裤，最终导致了很多用户的密码明文泄露。本文不探讨脱裤技术，主要研究的是如何正确（尽量安全）地保存用户密码。","articleStatus":0,"articlePermalink":"/secure-salted-password-hashing","articleImg1URL":"https://img.hacpai.com/bing/20180313.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"MySQL 自动备份 Shell 脚本","articleAbstractText":"可以选择设置需要备份的库，自动备份压缩，自动删除 7 天前的备份，需要使用 crontab 定时执行。","articleStatus":0,"articlePermalink":"/backup-mysql-shell","articleImg1URL":"https://img.hacpai.com/bing/20171121.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Go 编译跨平台","articleAbstractText":"适用于 [Linux]，拷贝代码后新建文件 cross.bash，并在 ${go 安装路径}/src 目录下执行。","articleStatus":0,"articlePermalink":"/compile-go-cross-platform","articleImg1URL":"https://img.hacpai.com/bing/20181230.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"模板引擎实现（一）词法分析","articleAbstractText":"如果你想实现模版引擎、编译器前端、文本解析器（比如 Markdown ）或想要了解它们的实现原理，请一定不要错过本系列的文章 :grin: 模板引擎实现（一）词法分析 另外，* 本系列的文章面向的是撸起袖子就开干的朋友，所以不会介绍基础理论，比如 DFA/NFA，算法复杂度等（确切的说是没法介绍理论，因为作者能力有限 :joy:）* 在使用到的术语/定义方面作者是认真查过资料并再三斟酌的，不会出现胡编乱造，请放心理解和使用 :white_check_mark:* 本系列文章的对应项目是 freemarker.go（FreeMarker 的 golang 实现），欢迎大家关注点赞 :star2: 本文介绍了词法分析的基本概念，主要参考 golang 的 text/template/parse 包源码进行解析。 词法分析 将面向源码的字符流转成 token 流的过程是词法分析。用\u201c流\u201d来描述主要说明了处理过程是有序和连续的。比如读取源码文件时是一个字符一个字符读取的，生成的 token 也是一个接一个的。 当我们在源码中看到 scanner、lex/le....","articleStatus":0,"articlePermalink":"/articles/2017/05/31/1496233258522.html","articleImg1URL":"https://img.hacpai.com/bing/20190214.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"CLOSE_WAIT 问题分析","articleAbstractText":"问题场景 服务器出现大量 TCP 连接状态为 CLOSE_WAIT，将系统资源耗尽，导致业务处理失败。 ## 处理方式 重启导致问题的进程，释放 TCP 连接后服务恢复正常。 调整服务器网络参数： * net.ipv4.tcp_keepalive_time=600，tcp 连接空闲 10 分钟后发送探测包，默认是 7200 秒（两小时） * net.ipv4.tcp_keepalive_intvl=15，每次探测包间隔 15 秒，默认是 75 秒 * net.ipv4.tcp_keepalive_probes=5，一共发送 5 次探测包，默认是 9 次 让内核尽快检测出空闲连接并释放。 ## 分析 服务器环境是 Java、Tomcat。服务端在收到客户端 FIN 包后进入 CLOSE_WAIT，但服务端没有发送 FIN 包，具体原因没有查明。猜测的原因是 * 服务端的业务处理阻塞，导致发送不了 FIN 包 * 网络问题导致依赖的基础库 bug 附：TCP 连接状态图 ![8b538e707e964084a2161844efb023ea-tcp.jp....","articleStatus":0,"articlePermalink":"/articles/2016/10/31/1477912575623.html","articleImg1URL":"https://img.hacpai.com/bing/20181102.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Linux 内核网络参数","articleAbstractText":"Linux 系统调优时需要进行关注的内核网络参数。","articleStatus":0,"articlePermalink":"/linux-kernel-network-turning","articleImg1URL":"https://img.hacpai.com/bing/20190124.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"自动清理日志 Shell 脚本","articleAbstractText":"以删除 Jetty 日志为例，仅保留最近 7 天的日志文件。","articleStatus":0,"articlePermalink":"/autoremove-logs","articleImg1URL":"https://img.hacpai.com/bing/20171127.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}