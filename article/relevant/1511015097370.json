{"relevantArticles":[{"articleTitle":"写在星火初版发布之际","articleAbstractText":"对黑客派的不满 一直以来我对黑客派都不是很满意，最近两年不满感日趋加重。不满并不是来自于功能或者界面，因为功能或者界面是可以不断调整、打磨和改进的。 对黑客派的不满主要来自于它对\u201c社区\u201d的实现方式是中心化的。随着我对\u201c社区\u201d一词的逐步理解、实践和思考，我越发感到中心化的社区实现方式是有问题的，因为这样的话黑客派其实并不是一个真正的社区，倒更像是一个开放了注册的个人博客，使用社区来形容它有挂羊头卖狗肉之嫌。 在意识到这是确实存在的一个问题后，我尝试性地做了一个修正方案，即通过\u201c贡献系统\u201d来实现社区自治，从而将中心化集权尽量进行分散，将一些管理权交给对黑客派有较多贡献的用户。虽然目前看来这个方案还算奏效，但却没有从根本上解决问题，因为根本问题还是来自于对社区的定义。这就好像\u201c抽象泄露原则\u201d所描述的那样，越是要在更高级抽象的层面解决问题，就越容易产生更多的新问题，最终，底层的基础问题将暴露无遗，浮沙高楼。 现在黑客派已经木已成舟，再怎么修整也是舟，成不了飞船了。不过即使如此，我也不会放弃的黑客派的，后面会继续尽最大努力进行调整，尽量弥补遗憾。 再识社区 社区究竟是什么？从数据、服务和系统的角....","articleStatus":0,"articlePermalink":"/articles/2019/06/04/1559578726531.html","articleImg1URL":"https://img.hacpai.com/bing/20180702.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"IPFS 数据链接与内容寻址","articleAbstractText":"本文翻译自 IPFS 社区教程 ProtoSchool。ProtoSchool 是一个可以交互式学习 IPFS 编程的网站，涉及代码的部分大家可到该网站上直接运行测试！ 本文将介绍如何在对等节点上创建和获取可验证的数据链接。 LESSION 1 - 创建节点并返回内容标识符（CID） 在本教程中，我们将探索 IPFS DAG API，它允许我们将数据对象存储在 IPFS 中，你可以在 IPFS 中存储一些令人兴奋的东西，比如你最喜欢的小猫的 GIF。 你可以将数据对象作为参数传入 ipfs.dag.put 方法来创建新节点，该方法返回新创建的节点的内容标识符（CID）。 ipfs.dag.put({ hello: 'world' }) CID 是 IPFS 中从其内容生成的数据地址。每当有人将相同的 {hello：'world'} 数据放入 IPFS 时，他们将获得与你获得的相同的 CID。 如果他们改为输入 {hell0：'w0rld'}，则 CID 会有所不同。 如下示例代码将创建 { test: 1 } 节点并返回其 CID： const run = async () =&amp....","articleStatus":0,"articlePermalink":"/articles/2019/05/05/1557020262516.html","articleImg1URL":"https://img.hacpai.com/bing/20190115.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"IPFS 去中心化数据结构（四）","articleAbstractText":"本文翻译自 IPFS 社区教程 ProtoSchool。ProtoSchool 是一个可以交互式学习 IPFS 编程的网站，涉及代码的部分大家可到该网站上直接运行测试！ 本文接上篇 IPFS 去中心化数据结构（三）。 LESSION 5 - 默克尔树和有向无环图（DAG） 正如我们所讨论的，去中心化的 Web 依赖于链接的数据结构。让我们来探索一下它们的样子。 默克尔树 默克尔树即\u201c哈希树\u201d，是一种树形数据结构，其中每个节点都是哈希值。 +--------+ | | +---------+ root +---------+ | | | | | +----+---+ | | | | +----v-----+ +-----v----+ +-----v----+ | | | | | | | node A | | node B | | node C | | | | | | | +----------+ +-----+----+ +-----+----+ | | +-----v----+ +-----v----+ | | | | | node D | | node E +-------+ |......","articleStatus":0,"articlePermalink":"/articles/2019/04/30/1556585434162.html","articleImg1URL":"https://img.hacpai.com/file/2019/04/dag-4aa8967c.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"IPFS 去中心化数据结构（三）","articleAbstractText":"本文翻译自 IPFS 社区教程 ProtoSchool。ProtoSchool 是一个可以交互式学习 IPFS 编程的网站，涉及代码的部分大家可到该网站上直接运行测试！ 本文接上篇 IPFS 去中心化数据结构（二）。 LESSION 4 - 内容标识符（CID） 之前我们通过可爱的照片举例让讨论不那么无趣，但实际上内容寻址可用于所有不同类型的文件和数据，JSON 对象、学术论文还有视频。要使加密哈希工作，我们需要知道我们正在使用的是哪种数据格式并使用适当的工具。 数据结构解码 CID 是内容寻址的特定方式。它是 IPFS 的规范之一，IPFS 是一种去中心化的 Web 协议，我们将在后面的教程中讨论，它具有非常广泛的含义。 CID 是包含加密哈希的单个标识符，并包含了编码解码器（\"codec\"）相关所需的信息。编解码器以某些格式编码和解码数据。 +-------+------------------------------+ | Codec | Multihash | +-------+------------------------------+ 许多格式和协议都是使用内容寻址的......","articleStatus":0,"articlePermalink":"/articles/2019/04/29/1556500741161.html","articleImg1URL":"https://img.hacpai.com/bing/20180406.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"IPFS 去中心化数据结构（二）","articleAbstractText":"本文翻译自 IPFS 社区教程 ProtoSchool。ProtoSchool 是一个可以交互式学习 IPFS 编程的网站，涉及代码的部分大家可到该网站上直接运行测试！ 本文接上篇 IPFS 去中心化数据结构（一）。 LESSION 3 - 通过加密哈希进行内容寻址 正如我们之前说的，中心化的 Web 依赖于中央机构来托管我们的数据，并使用 URL 作为地址来进行访问。但位置寻址不是唯一的选择。在去中心化的 Web 上，我们可以托管彼此的数据，并且通过一种特殊的链接方式让我们彼此间访问数据更可信和安全。 加密哈希 加密哈希是去中心化数据结构中最重要的工具函数。它打开了新链接形式的大门，我们称之为内容寻址，这样我们才能在没有中央机构的去中心化环境中链接数据。 哈希可以用于任何大小的数据，并为该数据返回单个固定大小的\u201c哈希值\u201d。 哈希值是一个看起来像 gobbledygook 的字符串，你可以将其视为数据的名称。它可能是这样的： zdpuAsHkamdCQgrDrNSwJVgjMkQWoLxdrccxV6qe9htipNein 说实话，由内容衍生的名字目前对人类来说并不友好（beagle.....","articleStatus":0,"articlePermalink":"/articles/2019/04/27/1556347691544.html","articleImg1URL":"https://img.hacpai.com/bing/20190217.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"IPFS 去中心化数据结构（一）","articleAbstractText":"本文翻译自 IPFS 社区教程 ProtoSchool。ProtoSchool 是一个可以交互式学习 IPFS 编程的网站，涉及代码的部分大家可到该网站上直接运行测试！ 去中心化的（Decentralized） Web 依赖于其独特的数据结构以及链接策略。让我们来一起学习一下哈希（hashing）、内容寻址（content addressing）、有向无环图（DAG） 以及默克尔树（Merkle Trees）！ LESSION 1 - 数据结构 在进入具体代码之前，让我们先花点时间看看去中心化 Web 的概念。课程 1 暂时不会涉及代码，让你可以可以更快熟悉一些关键术语和概念。 让我们开始吧！ 数据结构 无论你是否是程序员，你每天都被数据结构所包围。列表、词典和目录都有助于我们组织信息并考虑各种数据之间的关系。 数据结构 - 维基： 在计算机科学中，数据结构是一种数据组织，管理和存储格式，可以实现高效的访问和修改。 更确切地说，数据结构是数据值的集合，描述它们之间的关系，以及可以应用于数据的功能或操作。 在编程中，数据结构无处不在。将数据组织成变量以便在程序中使用它们的方式涉及数.......","articleStatus":0,"articlePermalink":"/articles/2019/04/27/1556347438386.html","articleImg1URL":"https://img.hacpai.com/bing/20180130.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}