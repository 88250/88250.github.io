{"relevantArticles":[{"articleTitle":"理解 HTTPS 原理，SSL/TLS 协议","articleAbstractText":"###为什么要使用 HTTPS 当我们使用 HTTP 协议时，传输的数据是不安全的，因为所有在客户端和服务端往来的数据都是明文： * 第三方可以获取到真实数据 * 第三方可以篡改数据 * 第三方可以冒充服务端或客户端 为了解决这些问题，需要在 HTTP 协议中加入一个安全机制，由此并产生了 HTTPS，我们可以认为 HTTPS = HTTP + TLS/SSL。TLS/SSL 的引入解决了安全问题，而上层应用协议还是 HTTP。 ###历史 SSL（Secure Sockets Layer）中文称作\u201c安全套接层\u201d，TLS（Transport Layer Security），中文称作\u201c传输层安全协议\u201d。 1. 1994 年，网景（NetScape）公司设计了 SSL 1.0 2. 1995 年，SSL 2.0，存在严重漏洞 3. 1996 年，SSL 3.0，得到大规模应用 4. 1999 年，IETF 对 SSL 进行标准化，发布了 TLS 1.0 5. 2006 年和 2008 年，TLS 进行了两次升级，分别为 TLS 1.1 和 TLS 1.2 在应用层，我们习惯将两者并称 TL....","articleStatus":0,"articlePermalink":"/articles/2015/11/19/1447920990604.html","articleImg1URL":"https://img.hacpai.com/bing/20181104.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"使用 Golang 操作 Linux Namespaces","articleAbstractText":"Linux Namespaces（Linux 命名空间）机制提供了进程使用操作系统资源时的隔离方式，是基于内核实现轻量级虚拟化（容器化，例如 docker）的实现基础。 具体来说就是当我们创建一个进程时，可以给进程设置 flag 组合来构建进程的命名空间，处于不同命名空间的进程是相互隔离的。","articleStatus":0,"articlePermalink":"/golang-linux-namespaces","articleImg1URL":"https://img.hacpai.com/bing/20180909.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Go 编译跨平台","articleAbstractText":"适用于 [Linux]，拷贝代码后新建文件 cross.bash，并在 ${go 安装路径}/src 目录下执行。","articleStatus":0,"articlePermalink":"/compile-go-cross-platform","articleImg1URL":"https://img.hacpai.com/bing/20181230.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"NetBeans 时讯翻译团队礼物","articleAbstractText":"记得从上次收到礼物到现在已经两年多了吧，最近半年我一直在联系 Oracle NetBeans 相关人员，希望为我们这个团队争取一下礼物 ;-)","articleStatus":0,"articlePermalink":"/articles/2011/12/22/1324544667307.html","articleImg1URL":"https://img.hacpai.com/bing/20180307.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Go 边看边练 -《Go 学习笔记》系列（十四）（已完结）","articleAbstractText":"上一篇： [1438938175118] ---- ### ToC * Go 边看边练 -《Go 学习笔记》系列（一）- 变量、常量 * Go 边看边练 -《Go 学习笔记》系列（二）- 类型、字符串 * Go 边看边练 -《Go 学习笔记》系列（三）- 指针 * Go 边看边练 -《Go 学习笔记》系列（四）- 控制流1 * Go 边看边练 -《Go 学习笔记》系列（五）- 控制流2 * [Go 边看边练 -《Go 学习笔记》系列（六）- 函数](http://symphony.b3....","articleStatus":0,"articlePermalink":"/articles/2015/08/10/1439194647152.html","articleImg1URL":"https://img.hacpai.com/bing/20181207.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"如何限制 docker run 容器执行时长？","articleAbstractText":"需求背景 有的时候我们需要跑一些不一定安全（不受信任）的程序时，可以通过 docker 实现资源隔离，其执行时长也需要控制，如果执行时间太长就终止运行。 Docker 本身是否支持超时控制 从 2013 年开始每隔一段时间都有人呼吁 docker 官方来实现这个特性，但官方并不打算实现。 具体讨论细节请看 https://github.com/moby/moby/issues/1905 。 错误的方案 以上讨论中以及其他地方陆续有人提出\u201c外围\u201d解决方案，其中有两种常见的错误方案值得我们注意。 kill docker run timeout 3 docker run ... untrusted_program docker run 本身是一个 docker client 派生的进程，使用 kill docker run 进程来终止容器进程运行（比如通过 Linux 命令 timeout 或者类似发送 kill 到 docker run 进程）的方案都可能会有问题，导致容器进程无法终止。主要原因是： docker run 这个进程不一定能及时响应信号，即使响应了信号，也不一定能传到容器......","articleStatus":0,"articlePermalink":"/articles/2019/05/19/1558229770509.html","articleImg1URL":"https://img.hacpai.com/bing/20190107.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"你保存用户密码的姿势正确吗？","articleAbstractText":"这几年陆陆续续有很多大站被脱裤，最终导致了很多用户的密码明文泄露。本文不探讨脱裤技术，主要研究的是如何正确（尽量安全）地保存用户密码。","articleStatus":0,"articlePermalink":"/secure-salted-password-hashing","articleImg1URL":"https://img.hacpai.com/bing/20180313.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}