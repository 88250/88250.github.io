{"relevantArticles":[{"articleTitle":"OpenShift 技术架构概述","articleAbstractText":"OpenShift 让用户可以创建、部署、管理云端应用，其云环境具体提供了磁盘空间、CPU 计算资源、内存资源、网络连接以及应用服务器。根据不同应用类型（数据库、编程语言等），OpenShift 会提供不同的文件系统布局（例如 PHP、Python、Ruby、Java）来创建不同的运行环境。此外，OpenShift 也提供了一定程度的 DNS（域别名）。","articleStatus":0,"articlePermalink":"/openshift-tech-architecture-overview","articleImg1URL":"https://img.hacpai.com/bing/20180523.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"待产必需品列表","articleAbstractText":"月初的时候老婆生产，出院后整理了那几天在医院用到的待产物品列表，希望能帮助到其他宝妈、奶爸。","articleStatus":0,"articlePermalink":"/delivery-necessaries","articleImg1URL":"https://img.hacpai.com/bing/20181007.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"快来申请 b3log.org 二级域名吧！","articleAbstractText":"亲，还在为别人不能不能访问你的博客而苦恼？ 亲，你不绑定自己的域名？ 那，亲，不要再犹豫了，快发邮件给我申请 b3log.org 二级域名吧！","articleStatus":0,"articlePermalink":"/apply-b3log-domain.html","articleImg1URL":"https://img.hacpai.com/bing/20180101.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"创业的第三个春天","articleAbstractText":"如果你是第一次看这个系列的文章，可从第一《创业的第一个春天》 看起。 创业第三个年头了，娃已经长大到会问我今天还有多少 issues 没改完。 博客端 将 Solo、Pipe 完整接入社区，文章浏览计数和评论使用了社区统一提供的服务组件： uvstat：实现浏览、评论统计 vcomment：实现评论集成展现 另外，Solo 实现了静态化用法，可以生成导出静态站点，方便用户部署到 GitHub Pages 上。 笔记端 链滴笔记实现了初版，目前已经基本满足了我个人在本地 Markdown 编辑排版的需要： 有的长文需要好几天才能写完，本地陆续写好后再粘贴到线上发布。以前主要用有道云笔记，现在已经迁移到链滴笔记 记一些琐碎的记录，比如常用命令、TODO 后面我们将开始实现导出静态化站点功能，逐步集成社区，作为社区的笔记端节点。 社区端 暗黑模式 黑客派上线了暗黑模式，已经支持全部主题。具体的主题模式有三种：明亮、暗黑和随日出日落自动切换。为了\u201c随日出日落自动切换\u201d，我整理了中国城市经纬度数据，有需要的朋友可自取。 对于命名，之前稍微纠结过一下到底是叫\u201c夜间模式\u201d还是\u201c暗黑模式\u201d。....","articleStatus":0,"articlePermalink":"/articles/2020/04/30/1588210663196.html","articleImg1URL":"https://img.hacpai.com/bing/20200404.jpg?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"毕业后第一个五年","articleAbstractText":"新生命、Ideas、开源、音乐、书、感悟、五年。","articleStatus":0,"articlePermalink":"/life-2014","articleImg1URL":"https://img.hacpai.com/bing/20181221.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"创业的第二个秋天","articleAbstractText":"如果你是第一次看这个系列的文章，可从第一篇《创业的第一个春天》1 看起。 帮助别人成功，自己才有成功的机会。 Vditor &amp; Lute 这个秋天开始实现 Vditor 的\u201c所见即所得\u201d特性，即实现 Typora2 那样写 Markdown 时不用分屏预览，而是边写边渲染。不过 Markdown 本身的设计用意就是\u201c所见即所得\u201d，所以把这个特性叫做\u201c实时渲染\u201d更恰当一些。这个月应该能实现完，下个月正式发布。 技术方案上我们是通过让 Lute 支持渲染\u201cVditor DOM\u201d来实现。这个方案最难的部分莫过于实现源码映射3，即渲染结果字符和 Markdown 原文字符的位置对应关系。只有实现了源码映射才能实现编辑（光标）位置的正确移动。完整方案和技术细节后续会单独写一篇文档来介绍，希望能给其他在做 Markdown 编辑器的开发者带来帮助。 Latke Latke 是我们 Java 产品线的开发框架，之前的 Latke 是基于 Servlet 实现的，虽然能用但是一直不太满意： Servlet 有点重，很多特性用不上 性能不足够好 不同的 Servlet 容器有不同的部署细节，......","articleStatus":0,"articlePermalink":"/articles/2019/11/11/1573402018349.html","articleImg1URL":"https://img.hacpai.com/bing/20191024.jpg?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"Google Code Bug","articleAbstractText":"今早发现挂在 Google Code 上的 B3log Solo 项目 Downloads 出现了统计问题。","articleStatus":0,"articlePermalink":"/articles/2010/11/05/1288919142093.html","articleImg1URL":"https://img.hacpai.com/bing/20171231.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}