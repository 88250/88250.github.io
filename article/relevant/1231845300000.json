{"relevantArticles":[{"articleTitle":"Seam 敏捷开发与 JavaEE 经典分层架构","articleAbstractText":"Seam 敏捷开发与 JavaEE 经典分层架构  转载请保留作者信息： Author: 88250 Blog: http:blog.csdn.netDL88250 MSN Gmail QQ: DL88250@gmail.com   本文简要讨论了两个问题：Seam 与经典 JavaEE 分层架构的联系与问题；Seam 与 JSF 2.0 规范。这是一个系列的文章，将讨论 Seam 框架用于实际开发的种种问题。 一、Seam 敏捷开发与 JavaEE 经典分层架构在 Seam 中由于双向注射Binjection的机制，允许我们可以减少层次的划分，简化设计....","articleStatus":0,"articlePermalink":"/articles/2008/11/01/1225558920000.html","articleImg1URL":"https://img.hacpai.com/bing/20180814.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"单元测试与敏捷开发","articleAbstractText":"单元测试与敏捷开发 转载请保留作者信息：作者：88250Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com在要求项目要尽量快地实现的时候，质量与开发进度上会出现一定的矛盾，最突出的就是单元测试代码与逻辑实现代码。TDD 测试驱动开发必然没错，但是使用不当会造成开发效率的下降。在敏捷开发实践中，结合前辈经验与自己的经验，如下几点是要关心的：  为主要的、关键的逻辑组件，关键的逻辑方法进行测试驱动开发这样对设计、设计演化很有帮助逻辑类似的组件如果存在多个，优先编写其中一种逻辑组件的测试代码....","articleStatus":0,"articlePermalink":"/articles/2008/12/05/1228486800000.html","articleImg1URL":"https://img.hacpai.com/bing/20181224.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Drop 简介","articleAbstractText":"ol { padding-left: 3em; font-weight: bold;}ol.writely-toc-subheading { padding-left: 1em; font-weight: normal;}  IE6 only *html writely-toc ol {list-style-position: inside;}.writely-toc-none {list-style-type: none;}.writely-toc-decimal {list-style-type: decimal;}.write....","articleStatus":0,"articlePermalink":"/articles/2009/11/30/1259620560000.html","articleImg1URL":"https://img.hacpai.com/bing/20171216.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"基于 Petri 网的软件过程支撑环境设计","articleAbstractText":"基于 Petri 网的软件过程支撑环境设计 基于 Petri 网的软件过程支撑环境设计摘要第 1 章 绪论1.1 软件过程与过程建模1.3 软件过程支撑环境现状1.3 本课题的研究内容及意义1.3.1 研究内容1.3.2 意义 1.4 Petri 网简介 第 2 章 软件过程定义语言2.1 SPDL 概述2.2 SPDL 元模型2.2.1 XML Schema 2.3 模型变换2.3.1 SPDL 域到 Java 域的变换2.3.2 SPDL 实例的 Petri 网图生成2.3.2.1 基元块2.3.2.2 Petri 网图生成 2.4 基于 S....","articleStatus":0,"articlePermalink":"/articles/2009/05/03/1241393640000.html","articleImg1URL":"https://img.hacpai.com/bing/20180828.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Java 依赖注入标准（JSR-330）简介","articleAbstractText":"Java 依赖注入标准（JSR-330）简介  转载请保留作者信息：  作者：88250，Vanessa  时间：2009 年 11 月 19 日  Java 依赖注入标准（JSR-330，Dependency Injection for Java）1.0 规范已于今年 10 月份发布。该规范主要是面向依赖注入使用者，而对注入器实现、配置并未作详细要求。目前 Spring、Guice 已经开始兼容该规范，JSR-299（Contexts and Dependency Injection for Java EE platform，参考实现 Weld）在依赖....","articleStatus":0,"articlePermalink":"/articles/2009/11/19/1258674480000.html","articleImg1URL":"https://img.hacpai.com/bing/20171106.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"自动生成的测试与TDD[翻译自Uncle Bob的博文]","articleAbstractText":"自动生成的测试与TDDPosted by Uncle Bob译者：88250 测试驱动的开发方式TDD现在已经很流行了，很多公司都在采用。不过，一些人也当心这会花费太多的时间去写单元测试，所以并一直在寻找自动生成测试的工具，以降低编写单元测试的负担。这负担可不是无关紧要的。在很恰当地使用TDD后，创建一个具有45,000行Java代码的应用，其中有15,000行代码是单元测试。我们可以很快计算出TDD增加了编码负担的整整13！当然了，这是一个消极的分析。使用TDD带来的好处是很重要的，其价值远远超出了编写额外代码的负担。但是，33％的测试代码仍然觉得过....","articleStatus":0,"articlePermalink":"/articles/2008/03/21/1206090120000.html","articleImg1URL":"https://img.hacpai.com/bing/20181024.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"再论 Java 应用中的\u201c领域建模\u201d","articleAbstractText":"再论 Java 应用中的领域建模 转载请保留作者信息： 作者：88250 Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com 再论 Java 应用中的领域建模 相关术语与概念 POJO（Plain Old Java Object） 领域模型（Domain Model） 各种风格（Style）的领域模型 贫血的领域模型（Anemic Domain Model） 富领域模型（Rich Domain Model） 公认的问题 EJB 3 ＆ JPA Domain Logic ....","articleStatus":0,"articlePermalink":"/articles/2009/03/23/1237801140000.html","articleImg1URL":"https://img.hacpai.com/bing/20180411.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}