{"relevantArticles":[{"articleTitle":"再论 Java 应用中的\u201c领域建模\u201d","articleAbstractText":"再论 Java 应用中的领域建模 转载请保留作者信息： 作者：88250 Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com 再论 Java 应用中的领域建模 相关术语与概念 POJO（Plain Old Java Object） 领域模型（Domain Model） 各种风格（Style）的领域模型 贫血的领域模型（Anemic Domain Model） 富领域模型（Rich Domain Model） 公认的问题 EJB 3 ＆ JPA Domain Logic ....","articleStatus":0,"articlePermalink":"/articles/2009/03/23/1237801140000.html","articleImg1URL":"https://img.hacpai.com/bing/20180411.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"规范化中的 JSR 299 与可能到来的 JSR 330","articleAbstractText":"规范化中的 JSR 299 与可能到来的 JSR 330转载请保留作者信息：作者：88250Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com  目前，JSR 299（Contexts and Dependency Injection for Java EE） 处于社区评审状态，预计今年 9 月会出现在 Java EE 6 规范中。JSR 330（Dependency Injection for Java）是一个提交中的规范。还没有规范文件可以下载到。299 的 Lead 是来自 JBoss ....","articleStatus":0,"articlePermalink":"/articles/2009/05/25/1243275960000.html","articleImg1URL":"https://img.hacpai.com/bing/20180326.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"自动生成的测试与TDD[翻译自Uncle Bob的博文]","articleAbstractText":"自动生成的测试与TDDPosted by Uncle Bob译者：88250 测试驱动的开发方式TDD现在已经很流行了，很多公司都在采用。不过，一些人也当心这会花费太多的时间去写单元测试，所以并一直在寻找自动生成测试的工具，以降低编写单元测试的负担。这负担可不是无关紧要的。在很恰当地使用TDD后，创建一个具有45,000行Java代码的应用，其中有15,000行代码是单元测试。我们可以很快计算出TDD增加了编码负担的整整13！当然了，这是一个消极的分析。使用TDD带来的好处是很重要的，其价值远远超出了编写额外代码的负担。但是，33％的测试代码仍然觉得过....","articleStatus":0,"articlePermalink":"/articles/2008/03/21/1206090120000.html","articleImg1URL":"https://img.hacpai.com/bing/20181024.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"我的翻译生涯开始了","articleAbstractText":"最近很热衷翻译工作，开源无处不在！ 1月份寒假的时候加入了NetBeans中文社区，参与了一篇Web教程的翻译 2月底，开学后翻译了 Uncle Bob Robert C. Martin的一篇博文 3月份开始翻译Martin Fowler的Mocks Aren't Stubs ，in process now.... 3月28日加入了满江红，参与了Spring2.5.x的Reference翻译最大的体会就是：看到了中国一些开源社区的繁荣，看到了有这么多的同僚为其他人服务。很高兴自己也能成为其中一份子，很高兴。我想喊一句：Open Source，Open M....","articleStatus":0,"articlePermalink":"/articles/2008/03/28/1206723360000.html","articleImg1URL":"https://img.hacpai.com/bing/20181210.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"HTML 5 WebSocket 示例","articleAbstractText":"转载请保留作者信息：  作者：88250  时间：2010 年 1 月 1 日  我们通过一个简单的例子来熟悉 HTML 5 WebSocket。该例子服务端从 0 开始每秒递增一个整数并发送给客户端浏览器显示。准备：下载 Jetty 7，Java Web 开发环境，Chrome 4+。 服务端 Java 代码：final public class CounterSocketServlet extends WebSocketServlet {  @Override protected WebSocket doWebSocketConnectfinal HttpSer....","articleStatus":0,"articlePermalink":"/articles/2010/01/01/1262376480000.html","articleImg1URL":"https://img.hacpai.com/bing/20190203.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Java 依赖注入标准（JSR-330）简介","articleAbstractText":"Java 依赖注入标准（JSR-330）简介  转载请保留作者信息：  作者：88250，Vanessa  时间：2009 年 11 月 19 日  Java 依赖注入标准（JSR-330，Dependency Injection for Java）1.0 规范已于今年 10 月份发布。该规范主要是面向依赖注入使用者，而对注入器实现、配置并未作详细要求。目前 Spring、Guice 已经开始兼容该规范，JSR-299（Contexts and Dependency Injection for Java EE platform，参考实现 Weld）在依赖....","articleStatus":0,"articlePermalink":"/articles/2009/11/19/1258674480000.html","articleImg1URL":"https://img.hacpai.com/bing/20171106.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Java 上下文与依赖注入（JSR 299）[1] ","articleAbstractText":"Java 上下文与依赖注入（JSR 299）[1]转载请保留作者信息： 作者：88250 Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com摘要本文从 JSR 299 规范入手，整理并翻译了该规范中非常重要的概念，并结合一些短小的例子对 JSR 299 的使用进行了说明。文中略过了如何使用 XML 配置 bean，主要介绍使用标注（annotation）配置。   绑定 1 定义新的绑定类型@BindingType@RetentionRUNTIME@Target{METHOD, FIELD, ....","articleStatus":0,"articlePermalink":"/articles/2009/05/20/1242830400000.html","articleImg1URL":"https://img.hacpai.com/bing/20180222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}