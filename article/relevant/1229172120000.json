{"relevantArticles":[{"articleTitle":"再论 Java 应用中的\u201c领域建模\u201d","articleAbstractText":"再论 Java 应用中的领域建模 转载请保留作者信息： 作者：88250 Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com 再论 Java 应用中的领域建模 相关术语与概念 POJO（Plain Old Java Object） 领域模型（Domain Model） 各种风格（Style）的领域模型 贫血的领域模型（Anemic Domain Model） 富领域模型（Rich Domain Model） 公认的问题 EJB 3 ＆ JPA Domain Logic ....","articleStatus":0,"articlePermalink":"/articles/2009/03/23/1237801140000.html","articleImg1URL":"https://img.hacpai.com/bing/20180411.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"单元测试与敏捷开发","articleAbstractText":"单元测试与敏捷开发 转载请保留作者信息：作者：88250Blog：http:blog.csdn.netDL88250 MSN Gmail QQ：DL88250@gmail.com在要求项目要尽量快地实现的时候，质量与开发进度上会出现一定的矛盾，最突出的就是单元测试代码与逻辑实现代码。TDD 测试驱动开发必然没错，但是使用不当会造成开发效率的下降。在敏捷开发实践中，结合前辈经验与自己的经验，如下几点是要关心的：  为主要的、关键的逻辑组件，关键的逻辑方法进行测试驱动开发这样对设计、设计演化很有帮助逻辑类似的组件如果存在多个，优先编写其中一种逻辑组件的测试代码....","articleStatus":0,"articlePermalink":"/articles/2008/12/05/1228486800000.html","articleImg1URL":"https://img.hacpai.com/bing/20181224.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"设计演化与设计","articleAbstractText":"转载请保留作者信息：作者：88250Blog：http:blog.csdn.netDL88250MSN Gmail QQ：DL88250@gmail.com 我认为，要成为优秀的软件设计者，学习软件设计的演化（尤其是设计演化）比学习软件设计更为重要。只有从演化的过程中才能看清设计的本质。 以往，我们只注重设计，认为设计是优质软件制造的必要条件。但好的设计往往是依靠设计者多年从事此行的经验，特别是所谓的大规模软件，此类软件的设计过于依赖于经验，过于依赖于人的个体行为。这样的依赖过于具体。 记得OO原则中有一条 Dependence Inversion：抽象不应该依赖于细节，细节应....","articleStatus":0,"articlePermalink":"/articles/2008/04/20/1208725260000.html","articleImg1URL":"https://img.hacpai.com/bing/20171204.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"自动生成的测试与TDD[翻译自Uncle Bob的博文]","articleAbstractText":"自动生成的测试与TDDPosted by Uncle Bob译者：88250 测试驱动的开发方式TDD现在已经很流行了，很多公司都在采用。不过，一些人也当心这会花费太多的时间去写单元测试，所以并一直在寻找自动生成测试的工具，以降低编写单元测试的负担。这负担可不是无关紧要的。在很恰当地使用TDD后，创建一个具有45,000行Java代码的应用，其中有15,000行代码是单元测试。我们可以很快计算出TDD增加了编码负担的整整13！当然了，这是一个消极的分析。使用TDD带来的好处是很重要的，其价值远远超出了编写额外代码的负担。但是，33％的测试代码仍然觉得过....","articleStatus":0,"articlePermalink":"/articles/2008/03/21/1206090120000.html","articleImg1URL":"https://img.hacpai.com/bing/20181024.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"基于 Petri 网的软件过程支撑环境设计","articleAbstractText":"基于 Petri 网的软件过程支撑环境设计 基于 Petri 网的软件过程支撑环境设计摘要第 1 章 绪论1.1 软件过程与过程建模1.3 软件过程支撑环境现状1.3 本课题的研究内容及意义1.3.1 研究内容1.3.2 意义 1.4 Petri 网简介 第 2 章 软件过程定义语言2.1 SPDL 概述2.2 SPDL 元模型2.2.1 XML Schema 2.3 模型变换2.3.1 SPDL 域到 Java 域的变换2.3.2 SPDL 实例的 Petri 网图生成2.3.2.1 基元块2.3.2.2 Petri 网图生成 2.4 基于 S....","articleStatus":0,"articlePermalink":"/articles/2009/05/03/1241393640000.html","articleImg1URL":"https://img.hacpai.com/bing/20180828.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"我的翻译生涯开始了","articleAbstractText":"最近很热衷翻译工作，开源无处不在！ 1月份寒假的时候加入了NetBeans中文社区，参与了一篇Web教程的翻译 2月底，开学后翻译了 Uncle Bob Robert C. Martin的一篇博文 3月份开始翻译Martin Fowler的Mocks Aren't Stubs ，in process now.... 3月28日加入了满江红，参与了Spring2.5.x的Reference翻译最大的体会就是：看到了中国一些开源社区的繁荣，看到了有这么多的同僚为其他人服务。很高兴自己也能成为其中一份子，很高兴。我想喊一句：Open Source，Open M....","articleStatus":0,"articlePermalink":"/articles/2008/03/28/1206723360000.html","articleImg1URL":"https://img.hacpai.com/bing/20181210.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"RoR的OO与敏捷[1][88250原创]","articleAbstractText":"本文不对Ruby的基础语法作过多介绍，只对Ruby的OO运用作出一次实践，也记录了我对Ruby的OO理解。另外，关于Ruby编码规范这里也不再赘述，写的代码尽量遵循《Ruby编码规范》。首先，建立一个Person类 ： person.rb#定义了一个codePersoncode类，该类默认派生于Object类classPerson#定义了属性的accessor，封装了属性attr_accessor:name,:age,:gender,:motherland#该方法override了基类的初始化方法definitializename,gender,motherland,age=18@nam....","articleStatus":0,"articlePermalink":"/articles/2008/01/29/1201569600000.html","articleImg1URL":"https://img.hacpai.com/bing/20190103.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}